name: Terraform CI/CD

on:
  push:
    branches: [main]
  pull_request:

env:
  AWS_REGION: us-east-1
  TF_VERSION: latest
  TF_DIR: ./terraform  # New directory reference

jobs:
  deploy:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # React Build Steps
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm ci

      - name: Build Production Bundle
        run: npm run build

      # Terraform Infrastructure
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ${{ env.TF_DIR }}
        run: terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        working-directory: ${{ env.TF_DIR }}
        run: terraform plan -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        working-directory: ${{ env.TF_DIR }}
        run: terraform apply -auto-approve -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Deployment to S3
      - name: Get Bucket Name
        if: github.ref == 'refs/heads/main'
        id: bucket
        working-directory: ${{ env.TF_DIR }}
        run: echo "BUCKET_NAME=$(terraform output -raw bucket_name)" >> $GITHUB_OUTPUT

      - name: Deploy to S3
        if: github.ref == 'refs/heads/main'
        run: aws s3 sync ./dist s3://${{ steps.bucket.outputs.BUCKET_NAME }} --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}